{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;ACAA,mEAAgC;AAEhC,MAAM,IAAI,GAAG,kBAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,kBAAQ,CAAC,MAAM,CAAC;IACpD,SAAS,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,QAAQ,EAAC,IAAI,EAAC;IACvC,QAAQ,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,QAAQ,EAAC,IAAI,EAAC;IACtC,KAAK,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,QAAQ,EAAC,IAAI,EAAC;IACnC,QAAQ,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,QAAQ,EAAC,IAAI,EAAC;CACzC,CAAC,CAAC,CAAC;AAEJ,qBAAe,IAAI,CAAC;;;;;;UCTpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,kEAA8B;AAE9B,sEAAqC;AACrC,wEAAyC;AACzC,+DAAwB;AACxB,mEAAoD;AACpD,iEAA4B;AAE5B,uEAA+B;AAC/B,+DAAiC;AACjC,MAAM,GAAG,GAAG,qBAAO,GAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,2BAAY,GAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;AAChD,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,kBAAI,EAAC;IACX,MAAM,EAAE,uBAAuB;IAC/B,WAAW,EAAE,IAAI;CAClB,CAAC,CAAC,CAAC;AAEJ,yGAAyG;AAEzG,qEAAqE;AAErE,MAAM,SAAS,GAAG,yFAAyF,CAAC;AAC5G,kBAAQ,CAAC,OAAO,CAAC,SAAS,EAAG,EAAE,CAAE;AAEjC,MAAM,EAAE,GAAG,kBAAQ,CAAC,UAAU,CAAC;AAC/B,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC,CAAC;AAElE,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAG,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC;AACH,MAAM,MAAM,GAAG,aAAa,CAAC;AAE7B,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,GAAG,EAAC,GAAG,EAAE,EAAE;IACpC,MAAM,EAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAC,GAAI,GAAG,CAAC,IAAI,CAAC;IAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,gBAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAExD,MAAM,IAAI,GAAG,IAAI,cAAI,CAAC,EAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;IAE9D,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;QAEzB,sBAAG,CAAC,IAAI,CAAC,EAAC,EAAE,EAAC,IAAI,CAAC,GAAG,EAAC,EAAE,MAAM,EAAE,CAAC,GAAG,EAAC,KAAK,EAAE,EAAE;YAC7C,IAAG,GAAG,EAAC;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;gBAChB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;aACpB;iBAAI;gBACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;aAC/C;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;IACrB,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,MAAM,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"body-parser\"","webpack:///external commonjs \"cookie-parser\"","webpack:///external commonjs \"cors\"","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"bcrypt\"","webpack:///external commonjs \"jsonwebtoken\"","webpack:///./src/models/User.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"mongoose\");","module.exports = require(\"bcrypt\");","module.exports = require(\"jsonwebtoken\");","import mongoose from \"mongoose\";\n\nconst User = mongoose.model('User', new mongoose.Schema({\n    firstName :{type:String, required:true},\n    lastName :{type:String, required:true},\n    email: {type:String, required:true},\n    password: {type:String, required:true}\n}));\n\nexport default User;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport express from 'express';\nimport * as path from 'path';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport mongoose, { ConnectOptions } from \"mongoose\";\nimport bcrypt from 'bcrypt';\n\nimport jwt from 'jsonwebtoken';\nimport User from './models/User';\nconst app = express();\napp.use(cookieParser());\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\napp.use(cors({\n  origin: 'http://localhost:4200',\n  credentials: true\n}));\n\n// const uri = \"mongodb+srv://admin:admin1234@cluster0.byt74xc.mongodb.net/?retryWrites=true&w=majority\";\n\n//app.use('/assets', express.static(path.join(__dirname, 'assets')));\n\nconst MONGO_URI = \"mongodb+srv://admin:admin1234@cluster0.byt74xc.mongodb.net/?retryWrites=true&w=majority\";\nmongoose.connect(MONGO_URI,  {} )\n\nconst db = mongoose.connection;\ndb.on(\"error\", console.error.bind(console, \"connection error: \"));\n\napp.get('/api/test', (req, res ) => {\n  res.send({ message: 'Welcome to server!' });\n});\nconst secret = \"SECRET_1234\";\n\napp.post('/api/register', (req,res) =>{\n  const {email, firstName, lastName} =  req.body;\n  console.log(req.body);\n  const password = bcrypt.hashSync(req.body.password, 10);\n\n  const user = new User({email, firstName, lastName, password});\n\n  user.save().then((user) =>{\n\n   jwt.sign({id:user._id}, secret, (err,token) =>{\n    if(err){\n      console.log(err)\n      res.sendStatus(500)\n    }else{\n      res.status(201).cookie('token', token).send();\n    }\n   });\n  }).catch(e =>{\n    console.log(e)\n    res.sendStatus(500)\n  })\n});\n\nconst port = process.env.PORT || 3333;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/api`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}